<?xml version="1.0" encoding="UTF-8"?>

<project name="Key2Gym-Business" default="build" basedir=".">
  <description>Builds and packages the project Key2Gym-Business.</description>
  
  <target name="init">
    <loadproperties srcfile="../private/environment.properties" />
    <loadproperties srcfile="project.properties" />    
    
    <property name="SCALA_HOME">${scala.dir}</property>
    
    <taskdef resource="scala/tools/ant/antlib.xml">
      <classpath>
	<pathelement location="${scala.dir}/lib/scala-compiler.jar"   />
	<pathelement location="${scala.dir}/lib/scala-library.jar"   />
      </classpath>
    </taskdef>
  </target>
  
  <macrodef name="compile" description="Compiles the specified unit.">
    <attribute name="unit" />
    <sequential>
      <mkdir dir="${bin.dir}/@{unit}" />
      
        <!-- Builds the Business API project. -->
        <ant antfile="../business-api/build.xml" target="build" inheritall="false" />
        
        <scalac failonerror="true" destdir="${bin.dir}/@{unit}" classpath="${@{unit}.classpath}" deprecation="true" >
	       <src path="${src.@{unit}.java.dir}:${src.@{unit}.scala.dir}"/>
	     </scalac>
        
        <javac srcdir="${src.@{unit}.java.dir}" destdir="${bin.dir}/@{unit}" debug="true" classpath="${@{unit}.classpath}:${bin.dir}/@{unit}" source="7" includeantruntime="false" />        
    </sequential>
  </macrodef>
  
  <target name="compile-main" depends="init">
    <compile unit="main" />
  </target>
  
  <target name="compile-test" depends="init">
    <compile unit="test" />
  </target>

  <target name="compile-res" depends="init">
    <!-- Converts the strings files to ascii. -->
    <native2ascii src="src/res" dest="bin/res" includes="**/*.properties" />
  </target>
  
  <target name="clean" depends="init">
    <delete dir="${bin.dir}" failonerror="false" />
    <delete dir="${dist.dir}" failonerror="false"/>
  </target>
  
  <target name="build" depends="init,compile-main,compile-res">
        
      <!-- Copies the rest of the resources. -->
      <copy todir="${bin.dir}/res">
	<fileset dir="${src.res.dir}" excludes="**/*.properties" />
      </copy>
      
      <!-- Builds a JAR file from the binary. -->
      <jar destfile="${dist.dir}/${jar.file}">
	<fileset dir="${bin.dir}/res" />
	<fileset dir="${bin.dir}/main" />
      </jar>
      
  </target>
  
  <target name="deploy" depends="init,undeploy">
    <exec dir="${dist.dir}" executable="${openejb.dir}/bin/openejb">
      <arg value="deploy" />
      <arg value="${project.dir}/business/${dist.dir}/${jar.file}" />
    </exec>
  </target>
  
  <target name="undeploy" depends="init">        
    <exec dir="${openejb.dir}" executable="${openejb.dir}/bin/openejb">
      <arg value="undeploy" />
      <arg value="${openejb.dir}/apps/${jar.file}" />
    </exec>
  </target>
  
  <target name="test" depends="init,compile-main,compile-test" description="Runs unit tests">
    
    <!-- Loads the ScalaTest ant task. -->
    <taskdef name="scalatest" classname="org.scalatest.tools.ScalaTestAntTask">
      <classpath path="${lib.scalatest-bin.jar}:${scala.dir}/lib/scala-library.jar" />
    </taskdef>
    
    <!-- Runs the tests. -->      
    <scalatest runpath="${test.runtime.classpath}" wildcard="org.key2gym.business">
      <reporter type="stdout" config="F" />
    </scalatest>
  </target>
  
  <target name="test-reports" depends="compile-res" description="Tests the reports units.">
    <!-- Loads the strings file for the transformers. -->
    <loadproperties srcFile="bin/res/org/key2gym/business/resources/Strings.properties" prefix="strings" />

    <test-report name="revenue/daily" />
    <transform-report name="revenue/daily" format="html" />
  </target>
  
  <macrodef name="test-report" description="Run tests on the specified report.">
    <attribute name="name" />
    <sequential>
      <mkdir dir="bin/test" />
      
      <!-- Validates the sample reports. -->
      <schemavalidate noNameSpaceFile="../business-api/src/org/key2gym/business/api/reports/@{name}/schema.xml" 
		      file="src/test/xml/org/key2gym/business/reports/@{name}/report1.xml" />

    </sequential>
  </macrodef>

  <macrodef name="transform-report" description="Transforms the report to the given format.">
    <attribute name="name" />
    <attribute name="format" />
    <sequential>

      <xslt basedir="src/test/xml/org/key2gym/business/reports/@{name}" 
	    extension=".@{format}" 
	    style="src/res/org/key2gym/business/reports/@{name}/xml2@{format}.xml" 
	    destdir="bin/test/org/key2gym/business/repors/@{name}" 
	    classpath="../lib/saxon.jar" 
	    force="true">
	       <factory name="net.sf.saxon.TransformerFactoryImpl"/>
	       <param  name="Label.Title" expression="${strings.Label.Title}" />
	       <param name="Label.RangeBegin" expression="${strings.Label.RangeBegin}" />
	       <param name="Label.RangeEnd" expression="${strings.Label.RangeEnd}" />
	       <param name="Label.Generated" expression="${strings.Label.Generated}" />
	       <param name="Text.DayNumber" expression="${strings.Text.DayNumber}" />
	       <param  name="Text.Date" expression="${strings.Text.Date}" />
	       <param name="Text.Revenue" expression="${strings.Text.Revenue}" />
      </xslt>
    </sequential>
  </macrodef>

</project>
