/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package census.presentation.blocks;

import census.business.ItemsService;
import census.business.SessionsService;
import census.business.StorageService;
import census.business.dto.ItemDTO;
import census.presentation.util.ItemsTableModel;
import java.util.List;
import java.util.Observable;
import java.util.Observer;

/**
 *
 * @author daniel
 */
public class ItemsPanel extends javax.swing.JPanel {

    /**
     * Creates new form ItemsPanel
     */
    public ItemsPanel() {
        observer = new ItemsObserver();
        observer.update(null, null);
        itemsService = ItemsService.getInstance();
        
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    
    public void setItems(Items items) {
        this.itemsMode = items;
        
        updateGUI();
    }
    
    private class ItemsObserver implements Observer {

        @Override
        public void update(Observable o, Object arg) {
            if(o == null) {
                StorageService.getInstance().addObserver(this);
                return;
            }
            
            if(SessionsService.getInstance().hasOpenSession()) {
                updateGUI();
            }
        }
        
    }
    
    private void updateGUI() {
        List<ItemDTO> items;
        
        if(itemsMode.equals(Items.ALL)) {
            items = itemsService.getAllItems();
        } else if(itemsMode.equals(Items.AVAILABLE)) {
            items = itemsService.getItemsAvailable();
        } else if(itemsMode.equals(Items.PURE)) {
            items = itemsService.getPureItems();
        } else {
            throw new IllegalStateException("The mode is unknown.");
        }
        
        itemsTableModel.setItems(items);
    }
    
    /*
     * Business
     */
    private ItemsService itemsService;
    private ItemsObserver observer;
    
    /*
     * GUI
     */
    private ItemsTableModel itemsTableModel;
    
    /*
     * Session variables
     */
    public enum Items {ALL, AVAILABLE, PURE};
    private Items itemsMode;
    
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        itemsScrollPane = new javax.swing.JScrollPane();
        itemsTable = new javax.swing.JTable();

        /*
        * Items table columns
        */
        ItemsTableModel.Column[] itemsTableColumns =
        new ItemsTableModel.Column[]{
            ItemsTableModel.Column.TITLE,
            ItemsTableModel.Column.QUANTITY,
            ItemsTableModel.Column.PRICE,
            ItemsTableModel.Column.BARCODE};

        itemsTableModel = new ItemsTableModel(itemsTableColumns);
        itemsTable.setModel(itemsTableModel);
        itemsTable.setSelectionMode(javax.swing.ListSelectionModel.MULTIPLE_INTERVAL_SELECTION);
        itemsScrollPane.setViewportView(itemsTable);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 490, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, 0)
                    .addComponent(itemsScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 490, Short.MAX_VALUE)
                    .addGap(0, 0, 0)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 331, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, 0)
                    .addComponent(itemsScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 331, Short.MAX_VALUE)
                    .addGap(0, 0, 0)))
        );
    }// </editor-fold>//GEN-END:initComponents
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane itemsScrollPane;
    private javax.swing.JTable itemsTable;
    // End of variables declaration//GEN-END:variables
}
