/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package census.presentation.blocks;

import census.business.AttendancesService;
import census.business.SessionsService;
import census.business.StorageService;
import census.business.api.SecurityException;
import census.business.dto.AttendanceDTO;
import census.presentation.util.AttendancesTableCellRenderer;
import census.presentation.util.AttendancesTableModel;
import census.presentation.util.AttendancesTableModel.Column;
import java.util.List;
import java.util.Observable;
import java.util.Observer;
import java.util.ResourceBundle;
import javax.swing.JPanel;
import org.apache.log4j.Logger;
import org.joda.time.DateMidnight;

/**
 *
 * @author daniel
 */
public class AttendancesPanel extends JPanel{
    /**
     * Creates new form AttendancesPanel
     */
    public AttendancesPanel() {
        attendancesService = AttendancesService.getInstance();

        initComponents();

        observer = new AttendancesObserver();
        observer.update(null, null);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        attendancesScrollPane = new javax.swing.JScrollPane();
        attendancesTable = new javax.swing.JTable();
        attendancesCountLabel = new javax.swing.JLabel();
        attendancesCountTextField = new javax.swing.JTextField();

        //WatermarkViewport wv = new WatermarkViewport(new FillPainter(), null);
        //wv.setView(attendancesTable);

        /*
        * This renderer highlights open attendances
        */
        attendancesTable.setDefaultRenderer(String.class, new AttendancesTableCellRenderer());

        /*
        * Columns for Attendances table
        */
        Column[] attendancesTableColumns =
        new Column[] {
            Column.BEGIN,
            Column.ID,
            Column.CLIENT_ID,
            Column.CLIENT_FULL_NAME,
            Column.KEY,
            Column.END
        };

        attendancesTableModel = new AttendancesTableModel(attendancesTableColumns);
        attendancesTable.setModel(attendancesTableModel);
        attendancesTable.setSelectionMode(javax.swing.ListSelectionModel.MULTIPLE_INTERVAL_SELECTION);
        attendancesTable.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                attendancesTableFocusLost(evt);
            }
        });
        attendancesScrollPane.setViewportView(attendancesTable);

        attendancesCountLabel.setText(bundle.getString("Label.Attendances")); // NOI18N

        attendancesCountTextField.setEditable(false);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(attendancesScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 525, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(attendancesCountLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(attendancesCountTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(attendancesCountLabel)
                    .addComponent(attendancesCountTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(attendancesScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 353, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void attendancesTableFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_attendancesTableFocusLost
        attendancesTable.clearSelection();
    }//GEN-LAST:event_attendancesTableFocusLost

    public AttendanceDTO getSelectedAttendance() {
        int index = attendancesTable.getSelectedRow();
        if (index == -1) {
            return null;
        }
        return attendancesTableModel.getAttendanceAt(index);
    }

    public DateMidnight getDate() {
        return date;
    }

    public void setDate(DateMidnight date) throws SecurityException {
        this.date = date;

        updateGUI();
    }

    private void updateGUI() throws SecurityException {
        List<AttendanceDTO> attendances;
        attendances = attendancesService.findAttendancesByDate(date);

        attendancesTableModel.setAttendances(attendances);
        attendancesCountTextField.setText(String.valueOf(attendances.size()));
    }

    private class AttendancesObserver implements Observer {

        @Override
        public void update(Observable o, Object arg) {
            if (o == null) {
                StorageService.getInstance().addObserver(this);
                return;
            }
            
            if(SessionsService.getInstance().hasOpenSession()) {
                try {
                    updateGUI();
                } catch(SecurityException ex) {
                    Logger.getLogger(this.getClass().getName()).error("Unexpected SecurityException", ex);
                }
            }
        }
    }
    /*
     * Presentation
     */
    private AttendancesTableModel attendancesTableModel;
    private DateMidnight date;
    private AttendancesObserver observer;
    private ResourceBundle bundle = ResourceBundle.getBundle("census/presentation/resources/Strings");
    /*
     * Business 
     */
    private AttendancesService attendancesService;

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel attendancesCountLabel;
    private javax.swing.JTextField attendancesCountTextField;
    private javax.swing.JScrollPane attendancesScrollPane;
    private javax.swing.JTable attendancesTable;
    // End of variables declaration//GEN-END:variables
}
