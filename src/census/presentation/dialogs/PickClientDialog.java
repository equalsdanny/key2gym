/*
 * Copyright 2012 Danylo Vashchilenko
 *
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not
 * use this file except in compliance with the License. You may obtain a copy of
 * the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
 * License for the specific language governing permissions and limitations under
 * the License.
 */
package census.presentation.dialogs;

import census.business.ClientsService;
import census.business.api.ValidationException;
import census.business.dto.ClientDTO;
import census.presentation.CensusFrame;
import census.presentation.util.ClientsTableModel;
import census.presentation.util.ClientsTableModel.Column;
import java.text.MessageFormat;
import java.util.LinkedList;
import java.util.List;
import java.util.ResourceBundle;
import javax.swing.JFrame;
import javax.swing.table.TableColumn;

/**
 *
 * @author Danylo Vashchilenko
 */
public class PickClientDialog extends CensusDialog {
    private ResourceBundle bundle = ResourceBundle.getBundle("census/presentation/resources/Strings");

    /**
     * Creates new form PickClientDialog
     */
    public PickClientDialog(JFrame parent) {
        super(parent, true);
        initComponents();

        idRadioButton.doClick();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        modeButtonGroup = new javax.swing.ButtonGroup();
        searchCriteriasPanel = new javax.swing.JPanel();
        cardTextField = new javax.swing.JTextField();
        cardRadioButton = new javax.swing.JRadioButton();
        idTextField = new javax.swing.JTextField();
        idRadioButton = new javax.swing.JRadioButton();
        fullNameRadioButton = new javax.swing.JRadioButton();
        fullNameTextField = new javax.swing.JTextField();
        searchButton = new javax.swing.JButton();
        clientsTableScrollPane = new javax.swing.JScrollPane();
        clientsTable = new javax.swing.JTable();
        okButton = new javax.swing.JButton();
        cancelButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle(bundle.getString("Title.PickClient")); // NOI18N
        setResizable(false);

        searchCriteriasPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(bundle.getString("Text.SearchCriterias"))); // NOI18N

        modeButtonGroup.add(cardRadioButton);
        cardRadioButton.setText(bundle.getString("Label.Card")); // NOI18N
        cardRadioButton.setActionCommand("card");
        cardRadioButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radioButtonsActionPerformed(evt);
            }
        });

        modeButtonGroup.add(idRadioButton);
        idRadioButton.setText(bundle.getString("Label.ID")); // NOI18N
        idRadioButton.setActionCommand("id");
        idRadioButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radioButtonsActionPerformed(evt);
            }
        });

        modeButtonGroup.add(fullNameRadioButton);
        fullNameRadioButton.setText(bundle.getString("Label.FullName")); // NOI18N
        fullNameRadioButton.setActionCommand("fullName");
        fullNameRadioButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radioButtonsActionPerformed(evt);
            }
        });

        searchButton.setText(bundle.getString("Button.Search")); // NOI18N
        searchButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout searchCriteriasPanelLayout = new javax.swing.GroupLayout(searchCriteriasPanel);
        searchCriteriasPanel.setLayout(searchCriteriasPanelLayout);
        searchCriteriasPanelLayout.setHorizontalGroup(
            searchCriteriasPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(searchCriteriasPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(searchCriteriasPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(searchCriteriasPanelLayout.createSequentialGroup()
                        .addGroup(searchCriteriasPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(searchCriteriasPanelLayout.createSequentialGroup()
                                .addGap(12, 12, 12)
                                .addGroup(searchCriteriasPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(fullNameTextField)
                                    .addComponent(idTextField)
                                    .addComponent(cardTextField)))
                            .addGroup(searchCriteriasPanelLayout.createSequentialGroup()
                                .addGroup(searchCriteriasPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(idRadioButton)
                                    .addComponent(cardRadioButton)
                                    .addComponent(fullNameRadioButton))
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, searchCriteriasPanelLayout.createSequentialGroup()
                        .addGap(0, 80, Short.MAX_VALUE)
                        .addComponent(searchButton, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(78, 78, 78))))
        );
        searchCriteriasPanelLayout.setVerticalGroup(
            searchCriteriasPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(searchCriteriasPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(idRadioButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(idTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cardRadioButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cardTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(fullNameRadioButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(fullNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(searchButton)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        Column[] columns = new Column[] {
            Column.ID,
            Column.CARD,
            Column.FULL_NAME
        };
        clientsTableModel = new ClientsTableModel(columns);
        clientsTable.setModel(clientsTableModel);
        int[] widths = new int[]{45,79,205};
        TableColumn column = null;
        for (int i = 0; i < widths.length; i++) {
            column = clientsTable.getColumnModel().getColumn(i);
            column.setPreferredWidth(widths[i]);
        }
        clientsTable.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        clientsTableScrollPane.setViewportView(clientsTable);

        getRootPane().setDefaultButton(okButton);
        okButton.setText(bundle.getString("Button.Ok")); // NOI18N
        okButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                okButtonActionPerformed(evt);
            }
        });

        cancelButton.setText(bundle.getString("Button.Cancel")); // NOI18N
        cancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(searchCriteriasPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(205, 205, 205)
                        .addComponent(okButton, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(cancelButton, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 282, Short.MAX_VALUE))
                    .addComponent(clientsTableScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(clientsTableScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(searchCriteriasPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(21, 21, 21)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(okButton)
                    .addComponent(cancelButton))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    @Override
    public void setVisible(boolean visible) {
        if (visible) {
            setLocationRelativeTo(getParent());
        }
        
        super.setVisible(visible);
    }
    
    private void radioButtonsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radioButtonsActionPerformed
        if (idRadioButton.isSelected()) {
            idTextField.setEnabled(true);
            idTextField.requestFocusInWindow();
        } else {
            idTextField.setEnabled(false);
            idTextField.setText(null);
        }

        if (cardRadioButton.isSelected()) {
            cardTextField.setEnabled(true);
            cardTextField.requestFocusInWindow();;
        } else {
            cardTextField.setEnabled(false);
            cardTextField.setText(null);
        }

        if (fullNameRadioButton.isSelected()) {
            fullNameTextField.setEnabled(true);
            fullNameTextField.requestFocusInWindow();
        } else {
            fullNameTextField.setEnabled(false);
            fullNameTextField.setText(null);
        }
    }//GEN-LAST:event_radioButtonsActionPerformed

    private void searchButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchButtonActionPerformed
        List<ClientDTO> clients;

        try {
            if (idRadioButton.isSelected()) {
                Short id;
                
                try {
                    id = Short.parseShort(idTextField.getText().trim());
                } catch (NumberFormatException ex) {
                    throw new ValidationException(MessageFormat.format(bundle.getString("Message.FieldIsNotFilledInCorrectly.withFieldName"), bundle.getString("Text.ID")));
                }

                clients = new LinkedList<>();
                clients.add(ClientsService.getInstance().getById(id));
            } else if (cardRadioButton.isSelected()) {
                Integer card;
                try {
                    card = Integer.parseInt(cardTextField.getText().trim());
                } catch (NumberFormatException ex) {
                    throw new ValidationException(MessageFormat.format(bundle.getString("Message.FieldIsNotFilledInCorrectly.withFieldName"), bundle.getString("Text.Card")));
                }

                ClientsService clientsService = ClientsService.getInstance();
                Short clientId = clientsService.findByCard(card);

                clients = new LinkedList<>();
                if (clientId != null) {
                    clients.add(clientsService.getById(clientId));
                }

            } else {
                clients = ClientsService.getInstance().findByFullName(fullNameTextField.getText().trim(), false);
            }
        } catch (ValidationException ex) {
            clients = new LinkedList<>();
        } catch (RuntimeException ex) {
            /*
             * The exception is unexpected. We got to shutdown the dialog for
             * the state of the transaction is now unknown.
             */
            setResult(census.presentation.dialogs.EditOrderDialog.RESULT_EXCEPTION);
            setException(ex);
            dispose();
            return;
        }

        clientsTableModel.setClients(clients);

        if(!clients.isEmpty()){
            clientsTable.getSelectionModel().setSelectionInterval(0, 0);
        }
    }//GEN-LAST:event_searchButtonActionPerformed

    private void okButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_okButtonActionPerformed
        int index = clientsTable.getSelectedRow();
        if (index == -1) {
            CensusFrame.getGlobalCensusExceptionListenersStack().peek().processException(new ValidationException(bundle.getString("Message.SelectClientFirst")));
            return;
        }
        ClientDTO client = clientsTableModel.getClients().get(index);

        setResult(RESULT_OK);
        setClientId(client.getId());
        dispose();
    }//GEN-LAST:event_okButtonActionPerformed

    private void cancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelButtonActionPerformed
        setResult(RESULT_CANCEL);
        dispose();
    }//GEN-LAST:event_cancelButtonActionPerformed
    /*
     * Session variables
     */
    private Short clientId;
    /*
     * GUI
     */
    private ClientsTableModel clientsTableModel;

    public Short getClientId() {
        return clientId;
    }

    public void setClientId(Short clientId) {
        this.clientId = clientId;
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton cancelButton;
    private javax.swing.JRadioButton cardRadioButton;
    private javax.swing.JTextField cardTextField;
    private javax.swing.JTable clientsTable;
    private javax.swing.JScrollPane clientsTableScrollPane;
    private javax.swing.JRadioButton fullNameRadioButton;
    private javax.swing.JTextField fullNameTextField;
    private javax.swing.JRadioButton idRadioButton;
    private javax.swing.JTextField idTextField;
    private javax.swing.ButtonGroup modeButtonGroup;
    private javax.swing.JButton okButton;
    private javax.swing.JButton searchButton;
    private javax.swing.JPanel searchCriteriasPanel;
    // End of variables declaration//GEN-END:variables
}
