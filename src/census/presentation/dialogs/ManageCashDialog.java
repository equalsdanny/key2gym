/*
 * Copyright 2012 Danylo Vashchilenko
 *
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not
 * use this file except in compliance with the License. You may obtain a copy of
 * the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
 * License for the specific language governing permissions and limitations under
 * the License.
 */
package census.presentation.dialogs;

import census.business.CashService;
import census.business.api.SecurityException;
import census.business.api.ValidationException;
import census.business.dto.CashAdjustmentDTO;
import census.presentation.CensusFrame;
import java.math.BigDecimal;
import java.util.ResourceBundle;
import javax.swing.JFrame;
import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;
import org.joda.time.DateMidnight;

/**
 *
 * @author Danylo Vashchilenko
 */
public class ManageCashDialog extends CensusDialog {
    private ResourceBundle bundle = ResourceBundle.getBundle("census/presentation/resources/Strings");

    /**
     * Creates new form ManageCashDialog
     */
    public ManageCashDialog(JFrame parent) {
        super(parent, true);
        cashService = CashService.getInstance();

        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        dateLabel = new javax.swing.JLabel();
        cashLabel = new javax.swing.JLabel();
        adjustmentTextField = new javax.swing.JTextField();
        newCashTextField = new javax.swing.JTextField();
        plusButton = new javax.swing.JButton();
        minusButton = new javax.swing.JButton();
        noteLabel = new javax.swing.JLabel();
        noteAreaScrollPane = new javax.swing.JScrollPane();
        noteTextArea = new javax.swing.JTextArea();
        okButton = new javax.swing.JButton();
        cancelButton = new javax.swing.JButton();
        dateTextField = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle(bundle.getString("Title.ManageCash")); // NOI18N
        setResizable(false);

        dateLabel.setText(bundle.getString("Label.Date")); // NOI18N

        cashLabel.setText(bundle.getString("Label.Adjustment")); // NOI18N

        adjustmentTextField.setEnabled(false);

        newCashTextField.getDocument().addDocumentListener(new DocumentListener() {

            @Override
            public void insertUpdate(DocumentEvent e) {
                okButton.setEnabled(false);
            }

            @Override
            public void removeUpdate(DocumentEvent e) {
                okButton.setEnabled(newCashTextField.getText().trim().isEmpty());
            }

            @Override
            public void changedUpdate(DocumentEvent e) {
            }
        });

        plusButton.setText("+");
        plusButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                plusButtonActionPerformed(evt);
            }
        });

        minusButton.setText("-");
        minusButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                minusButtonActionPerformed(evt);
            }
        });

        noteLabel.setText(bundle.getString("Label.Note")); // NOI18N

        noteTextArea.setColumns(20);
        noteTextArea.setLineWrap(true);
        noteTextArea.setRows(5);
        noteAreaScrollPane.setViewportView(noteTextArea);

        getRootPane().setDefaultButton(okButton);
        okButton.setText(bundle.getString("Button.Ok")); // NOI18N
        okButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                okButtonActionPerformed(evt);
            }
        });

        cancelButton.setText(bundle.getString("Button.Cancel")); // NOI18N
        cancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelButtonActionPerformed(evt);
            }
        });

        dateTextField.setEnabled(false);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(cashLabel)
                            .addComponent(dateLabel)
                            .addComponent(noteLabel))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(noteAreaScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 259, Short.MAX_VALUE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(newCashTextField)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(plusButton, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(minusButton, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(adjustmentTextField)
                            .addComponent(dateTextField)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(83, 83, 83)
                        .addComponent(okButton, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cancelButton, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {minusButton, plusButton});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(dateLabel)
                    .addComponent(dateTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cashLabel)
                    .addComponent(adjustmentTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(newCashTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(plusButton)
                    .addComponent(minusButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(noteLabel)
                    .addComponent(noteAreaScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(okButton)
                    .addComponent(cancelButton))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    @Override
    public void setVisible(boolean visible) {
        if(visible) {
            setLocationRelativeTo(getParent());
        }
        
        super.setVisible(visible);
    }
    private void cancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelButtonActionPerformed
        setResult(RESULT_CANCEL);
        dispose();
    }//GEN-LAST:event_cancelButtonActionPerformed

    private void plusButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_plusButtonActionPerformed
        BigDecimal augend;

        try {
            augend = new BigDecimal(newCashTextField.getText().trim());
        } catch (NumberFormatException ex) {
            CensusFrame.getGlobalCensusExceptionListenersStack().peek().processException(new ValidationException(bundle.getString("Message.NewCashFieldIsNotFilledInCorrectly")));
            return;
        }

        cashAdjustment.setAmount(cashAdjustment.getAmount().add(augend));
        adjustmentTextField.setText(cashAdjustment.getAmount().toPlainString());
        newCashTextField.setText("");
    }//GEN-LAST:event_plusButtonActionPerformed

    private void minusButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_minusButtonActionPerformed
        BigDecimal subtrahend;

        try {
            subtrahend = new BigDecimal(newCashTextField.getText().trim());
        } catch (NumberFormatException ex) {
            CensusFrame.getGlobalCensusExceptionListenersStack().peek().processException(new ValidationException(bundle.getString("Message.NewCashFieldIsNotFilledInCorrectly")));
            return;
        }

        cashAdjustment.setAmount(cashAdjustment.getAmount().subtract(subtrahend));
        adjustmentTextField.setText(cashAdjustment.getAmount().toPlainString());
        newCashTextField.setText("");
    }//GEN-LAST:event_minusButtonActionPerformed

    private void okButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_okButtonActionPerformed
        try {
            cashAdjustment.setNote(noteTextArea.getText());
            cashService.recordCashAdjustment(cashAdjustment);
        } catch(ValidationException ex) {
            CensusFrame.getGlobalCensusExceptionListenersStack().peek().processException(ex);
            return;
        } catch(SecurityException|RuntimeException ex) {
            setResult(RESULT_EXCEPTION);
            setException(new RuntimeException(ex));
            dispose();
            return;
        }
        
        setResult(RESULT_OK);
        dispose();
    }//GEN-LAST:event_okButtonActionPerformed

    public void setDate(DateMidnight date) {
        this.date = date;

        dateTextField.setText(date.toString("dd-MM-yyyy"));

        try {
            cashAdjustment = cashService.getAdjustmentByDate(date);
        } catch (SecurityException | RuntimeException ex) {
            setResult(RESULT_EXCEPTION);
            setException(new RuntimeException(ex));
            dispose();
            return;
        }

        adjustmentTextField.setText(cashAdjustment.getAmount().toPlainString());
        noteTextArea.setText(cashAdjustment.getNote());
    }

    public DateMidnight getDate() {
        return date;
    }
    /*
     * Session variables
     */
    private DateMidnight date;
    /*
     * Business
     */
    private CashService cashService;
    private CashAdjustmentDTO cashAdjustment;
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField adjustmentTextField;
    private javax.swing.JButton cancelButton;
    private javax.swing.JLabel cashLabel;
    private javax.swing.JLabel dateLabel;
    private javax.swing.JTextField dateTextField;
    private javax.swing.JButton minusButton;
    private javax.swing.JTextField newCashTextField;
    private javax.swing.JScrollPane noteAreaScrollPane;
    private javax.swing.JLabel noteLabel;
    private javax.swing.JTextArea noteTextArea;
    private javax.swing.JButton okButton;
    private javax.swing.JButton plusButton;
    // End of variables declaration//GEN-END:variables
}
