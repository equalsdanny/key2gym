/*
 * Copyright 2012 Danylo Vashchilenko
 *
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not
 * use this file except in compliance with the License. You may obtain a copy of
 * the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
 * License for the specific language governing permissions and limitations under
 * the License.
 */
package census.presentation.dialogs;

import census.business.FreezesService;
import census.business.api.BusinessException;
import census.business.api.ValidationException;
import census.business.api.SecurityException;
import census.business.dto.FreezeDTO;
import census.presentation.CensusFrame;
import census.presentation.util.FreezesTableModel;
import census.presentation.util.FreezesTableModel.Column;
import java.util.List;
import java.util.ResourceBundle;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JFrame;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import org.joda.time.DateMidnight;

/**
 *
 * @author Danylo Vashchilenko
 */
public class ManageFreezesDialog extends CensusDialog {
    private ResourceBundle bundle = ResourceBundle.getBundle("census/presentation/resources/Strings");

    /**
     * Creates new form ManageFreezesDialog
     */
    public ManageFreezesDialog(JFrame parent) {
        super(parent, true);
        freezesService = FreezesService.getInstance();
        
        initComponents();
        
        freezesTable.getSelectionModel().addListSelectionListener(new ListSelectionListener() {

            @Override
            public void valueChanged(ListSelectionEvent e) {
                if(freezesTable.getSelectedRowCount() == 1) {
                    removeButton.setEnabled(true);
                    noteTextArea.setText(freezesTableModel.getFreezeAt(freezesTable.getSelectedRow()).getNote());
                } else {
                    removeButton.setEnabled(false);
                    noteTextArea.setText("");
                }
            }
        });
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        periodsComboBox = new javax.swing.JComboBox();
        freezesScrollPane = new javax.swing.JScrollPane();
        freezesTable = new javax.swing.JTable();
        noteScrollPane = new javax.swing.JScrollPane();
        noteTextArea = new javax.swing.JTextArea();
        removeButton = new javax.swing.JButton();
        okButton = new javax.swing.JButton();
        cancelButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle(bundle.getString("Title.Freezes")); // NOI18N
        setResizable(false);

        String[] periods = new String[] {
            bundle.getString("Text.Last7Days"),
            bundle.getString("Text.LastMonth"),
            bundle.getString("Text.Last3Months"),
            bundle.getString("Text.All")
        };
        periodsComboBox.setModel(new DefaultComboBoxModel(periods));
        periodsComboBox.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                periodsComboBoxItemStateChanged(evt);
            }
        });

        Column[] columns = new Column[] {
            Column.ADMINISTRATOR_FULL_NAME,
            Column.CLIENT_FULL_NAME,
            Column.DATE_ISSUED,
            Column.DAYS,
            Column.DATE_EXPIRED,
            Column.NOTE
        };

        freezesTableModel = new FreezesTableModel(columns);
        freezesTable.setModel(freezesTableModel);
        freezesTable.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        freezesScrollPane.setViewportView(freezesTable);

        noteScrollPane.setBorder(javax.swing.BorderFactory.createTitledBorder(bundle.getString("Text.Note"))); // NOI18N

        noteTextArea.setColumns(20);
        noteTextArea.setLineWrap(true);
        noteTextArea.setRows(5);
        noteTextArea.setEnabled(false);
        noteScrollPane.setViewportView(noteTextArea);

        removeButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/census/presentation/resources/remove32.png"))); // NOI18N
        removeButton.setText(bundle.getString("Button.Remove")); // NOI18N
        removeButton.setEnabled(false);
        removeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removeButtonActionPerformed(evt);
            }
        });

        getRootPane().setDefaultButton(okButton);
        okButton.setText(bundle.getString("Button.Ok")); // NOI18N
        okButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                okButtonActionPerformed(evt);
            }
        });

        cancelButton.setText(bundle.getString("Button.Cancel")); // NOI18N
        cancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(freezesScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 515, Short.MAX_VALUE)
                    .addComponent(noteScrollPane))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(removeButton)
                        .addGap(51, 51, 51))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(okButton, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cancelButton, javax.swing.GroupLayout.DEFAULT_SIZE, 99, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(periodsComboBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addContainerGap())))
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {cancelButton, okButton});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(periodsComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(139, 139, 139)
                        .addComponent(removeButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 158, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE, false)
                            .addComponent(okButton)
                            .addComponent(cancelButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(freezesScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 290, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(noteScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void periodsComboBoxItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_periodsComboBoxItemStateChanged
        updateGUI();
    }//GEN-LAST:event_periodsComboBoxItemStateChanged

    private void cancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelButtonActionPerformed
        setResult(RESULT_CANCEL);
        dispose();
    }//GEN-LAST:event_cancelButtonActionPerformed

    private void okButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_okButtonActionPerformed
        setResult(RESULT_OK);
        dispose();
    }//GEN-LAST:event_okButtonActionPerformed

    private void removeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removeButtonActionPerformed
        try {
            freezesService.remove(freezesTableModel.getFreezeAt(freezesTable.getSelectedRow()).getId());
        } catch(SecurityException|ValidationException ex) {
            setResult(RESULT_EXCEPTION);
            setException(new RuntimeException(ex));
            dispose();
            return;
        } catch(BusinessException ex) {
            CensusFrame.getGlobalCensusExceptionListenersStack().peek().processException(ex);
            return;
        }
        
        updateGUI();
    }//GEN-LAST:event_removeButtonActionPerformed

    @Override
    public void setVisible(boolean visible) {
        if(visible) {
            updateGUI();
            setLocationRelativeTo(getParent());
        }
        
        super.setVisible(visible);
    }
    
    private void updateGUI() {
        List<FreezeDTO> freezes;
        DateMidnight today = new DateMidnight();
        try {
            if(periodsComboBox.getSelectedIndex() == 0) {
                freezes = freezesService.findByDateIssuedRange(today.minusDays(7), today);
            } else if(periodsComboBox.getSelectedIndex() == 1) {
                freezes = freezesService.findByDateIssuedRange(today.minusMonths(1), today);
            } else if(periodsComboBox.getSelectedIndex() == 2) {
                freezes = freezesService.findByDateIssuedRange(today.minusMonths(3), today);
            } else {
                freezes = freezesService.findAll();
            }
        } catch(SecurityException|ValidationException ex) {
            setResult(RESULT_EXCEPTION);
            setException(new RuntimeException(ex));
            dispose();
            return;
        }
        
        freezesTableModel.setFreezes(freezes);
    }
    
    /*
     * GUI
     */
    private FreezesTableModel freezesTableModel;
    
    /*
     * Business
     */
    private FreezesService freezesService;

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton cancelButton;
    private javax.swing.JScrollPane freezesScrollPane;
    private javax.swing.JTable freezesTable;
    private javax.swing.JScrollPane noteScrollPane;
    private javax.swing.JTextArea noteTextArea;
    private javax.swing.JButton okButton;
    private javax.swing.JComboBox periodsComboBox;
    private javax.swing.JButton removeButton;
    // End of variables declaration//GEN-END:variables
}
